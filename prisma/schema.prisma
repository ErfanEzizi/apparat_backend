datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Define the User model
model User {
  id              String        @id @default(uuid())
  username        String        @unique
  email           String        @unique
  password        String
  role            UserRole      @default(CLIENT)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  clientBookings  Job[]     @relation("ClientBookings")
  creatorBookings Job[]     @relation("CreatorBookings")
  jobApplications JobApplication[] @relation("PhotographerApplications")
}

// Define the Booking model with basic geolocation data
model Job {
  id              String    @id @default(uuid())
  title           String    @default("")// Short title for the job
  description     String    @default("")// Detailed description of the job
  date            DateTime
  locationName    String
  status          String    @default("pending") // "pending", "accepted", "completed", "cancelled", etc.
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  client          User      @relation("ClientBookings", fields: [clientId], references: [id])
  clientId        String
  creator         User?     @relation("CreatorBookings", fields: [creatorId], references: [id])
  creatorId       String?
  locations       Location[]
  jobApplications JobApplication[] @relation("JobApplications")
  latitude        Float?    // Geolocation latitude
  longitude       Float?    // Geolocation longitude
}

model JobApplication {
  id              String    @id @default(uuid())
  job             Job       @relation("JobApplications", fields: [jobId], references: [id])
  jobId           String
  photographer    User      @relation("PhotographerApplications", fields: [photographerId], references: [id])
  photographerId  String
  status          String    @default("pending") // "pending", "accepted", "rejected"
  createdAt       DateTime  @default(now())
}

// Optional: Define a Location model if you want to store real-time tracking history
model Location {
  id              String      @id @default(uuid())
  booking         Job     @relation(fields: [jobId], references: [id])
  jobId       String
  latitude        Float
  longitude       Float
  timestamp       DateTime    @default(now())
}

// Define the UserRole enum
enum UserRole {
  CLIENT
  CREATOR
}
